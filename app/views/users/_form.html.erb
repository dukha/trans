<!--%= semantic_form_for(@user, :method => "post",:url=> user_create_path) do |f| % -->
<%if @user.new_record? then
    path = user_create_path
  else  
    path = user_update_path
  end%>
<%= semantic_form_for(@user, :url => path) do |f| %>
  <%= f.inputs do %>
      <%= f.input :username%>
      <%=f.input :actual_name %>
      <%=f.input :email%>
      <%= f.input :password %>
      <%= f.input :password_confirmation %>
      <!--%=f.input :profiles, :as => :select, :include_blank => true, :collection=> Profile.all.collect {|p| [p.name,p.id]}, :input_html=>{:multiple => false} % -->
      <!-- This is tricky stuff. We are working with the users has_many :through relation for profiles. Hence we need profile_ids
           We don't have to declare profile_ids anywhere. Nor do we need to use accepts_nested_attr_for method for the join object-->
      <li><%=f.label "Profiles:", {:style=>"width:25%;"}%>
        <%cb_count = 0%>
        <%cbs_per_row = 4%>
        <table>  
        <%=f.collection_check_boxes( :profile_ids, Profile.all, :id, :name) do |b| %>
           <%if cb_count%cbs_per_row == 0 && cb_count != 0%>
             </tr>
           <%end%>
           <%if cb_count%cbs_per_row == 0%>
             <tr class = 'multi-checkboxes'>
           <%end%>
            <td class = 'multi-checkbox'>
              <%=  b.label(:"data-value" => b.value, :style=>"width:auto; padding-right:5px" ) { 
                    b.check_box + b.text
                  }
               %>
              <%cb_count += 1%>
            </td>    
         <%end%>
         <%if cb_count%cbs_per_row != 0%>
             </tr>
         <%end%>
        </table>
      </li> 
  <% end %>

  <%= f.actions do %>
    <%= f.action(:submit) %>
  <% end %>
<%end%>
