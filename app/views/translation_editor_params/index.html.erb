<script type="text/javascript">
//This script  handles showing and hiding selection criteria
  var criteriaDiv ="#criteria";
  var criteriaButton = "#showHideCriteria";
  $().ready(function(){
    //Initialise the criteria to be hidden on first display
    $(criteriaDiv).hide(); 
    $(criteriaButton).html(criteriaHiddenText);
    
    if( <%= @translation_editor_params.count==0 %>){
      toggleCriteria();
    }
    
    $(criteriaButton).click(function(){
      toggleCriteria();
    }); //end click
  });//end ready
  var   criteriaHiddenText = "<%=t($FA +'show_something', :something=>t($SC))%>";
  var   criteriaVisibleText = "<%=t($FA +'hide_something', :something=>t($SC))%>";
  function toggleCriteria(){
    if($(criteriaDiv).is(':visible')){ 
        $(criteriaButton).html(criteriaHiddenText);
    }else{
        $(criteriaButton).html(criteriaVisibleText);
    }
    // toggle has to be after setting button text otherwise is(':visible') will not work properly
    $(criteriaDiv).slideToggle('slow');  
  }
  
</script>
<%=theading("listing", :model=>'translation_editor_param', :count=>11) %>
<%if TranslationEditorParam.respond_to?( :searchable_attr ) and TranslationEditorParam.searchable_attr.any? then %>
<button id="showHideCriteria" type='button'>x</button>
<div id='criteria' class="criteria" >
  <!-- Use form_tag here because we are not going to work with a new AR model. form_tag doesn't work with formtastic either -->
  <!-- See controller#index doc for how to use this stuff below. 
    YOU NEED TO ADD METHODS TO MODEL BEFORE THIS PAGE WILL WORK -->
  <%= form_tag translation_editor_params_path, :method => 'get', :class=>'formtastic' do %>
    <!--    These next 2 hidden fields needed for sorting from column headers -->
    <%= hidden_field_tag :direction, params[:direction] %>
    <%= hidden_field_tag :sort, params[:sort] %>
    <fieldset class="inputs">
      <ol>
     
      <%if TranslationEditorParam.searchable_attr.include?("dot_key_code") %>  
      <li class="string optional" id="translation_editor_param_dot_key_code_input"><label for="criteriondot_key_code" class="criteria-label" >
        <%= tlabel("dot_key_code", "translation_editor_param") %> </label>
           <%=select_tag(  :operator_dot_key_code, options_for_select(operators_2_options(equal_operator), params[:operator_dot_key_code]),{:include_blank=> true,:class=>'criteria-operators-select', :readonly=>true} ) %> 
           <!-- The date pikcer here cannot reset itself: once a user chooses a date then the only way of having it not considered it to set it to, say 2000-01-01 and criterion to after
             Not pretty but whoever makes datepicker doesn't want a reset function as part of it http://jsbin.com/ofare/edit#javascript,html may be a work around -->
           <%=text_field_tag( :criterion_dot_key_code, params[:criterion_dot_key_code])%>
      </li> 
      <%end #if  attribute in searchable %> 
     
      <%if TranslationEditorParam.searchable_attr.include?("param_name") %>  
      <li class="string optional" id="translation_editor_param_param_name_input"><label for="criterionparam_name" class="criteria-label" >
        <%= tlabel("param_name", "translation_editor_param") %> </label>
           <%=select_tag(  :operator_param_name, options_for_select(operators_2_options(equal_operator), params[:operator_param_name]),{:include_blank=> true,:class=>'criteria-operators-select', :readonly=>true} ) %> 
           <!-- The date pikcer here cannot reset itself: once a user chooses a date then the only way of having it not considered it to set it to, say 2000-01-01 and criterion to after
             Not pretty but whoever makes datepicker doesn't want a reset function as part of it http://jsbin.com/ofare/edit#javascript,html may be a work around -->
           <%=text_field_tag( :criterion_param_name, params[:criterion_param_name])%>
      </li> 
      <%end #if  attribute in searchable %> 
     
      <%if TranslationEditorParam.searchable_attr.include?("param_order") %>  
      <li class="string optional" id="translation_editor_param_param_order_input"><label for="criterionparam_order" class="criteria-label" >
        <%= tlabel("param_order", "translation_editor_param") %> </label>
           <%=select_tag(  :operator_param_order, options_for_select(operators_2_options(equal_operator), params[:operator_param_order]),{:include_blank=> true,:class=>'criteria-operators-select', :readonly=>true} ) %> 
           <!-- The date pikcer here cannot reset itself: once a user chooses a date then the only way of having it not considered it to set it to, say 2000-01-01 and criterion to after
             Not pretty but whoever makes datepicker doesn't want a reset function as part of it http://jsbin.com/ofare/edit#javascript,html may be a work around -->
           <%=text_field_tag( :criterion_param_order, params[:criterion_param_order])%>
      </li> 
      <%end #if  attribute in searchable %> 
     
      <%if TranslationEditorParam.searchable_attr.include?("param_default") %>  
      <li class="string optional" id="translation_editor_param_param_default_input"><label for="criterionparam_default" class="criteria-label" >
        <%= tlabel("param_default", "translation_editor_param") %> </label>
           <%=select_tag(  :operator_param_default, options_for_select(operators_2_options(equal_operator), params[:operator_param_default]),{:include_blank=> true,:class=>'criteria-operators-select', :readonly=>true} ) %> 
           <!-- The date pikcer here cannot reset itself: once a user chooses a date then the only way of having it not considered it to set it to, say 2000-01-01 and criterion to after
             Not pretty but whoever makes datepicker doesn't want a reset function as part of it http://jsbin.com/ofare/edit#javascript,html may be a work around -->
           <%=text_field_tag( :criterion_param_default, params[:criterion_param_default])%>
      </li> 
      <%end #if  attribute in searchable %> 
     
     </ol> 
   </fieldset>
      
      <%= submit_tag "Search", :name => nil %>
  <%end  #end form_tag do%>

</div>
<%end # if searchable_attr %>

<% if @translation_editor_params.count == 0 then %>
  
<%  else %>
    <%= twill_paginate %>

    <% if TranslationEditorParam.respond_to? :sortable_attr
      sortable_cols = TranslationEditorParam.sortable_attr
    else
      sortable_cols = []
    end %>

  <table class="data">
    <tr class="dataheader">
    
      <th class ="dataheader"><%=sortable("dot_key_code","translation_editor_param", sortable_cols.include?("dot_key_code"))%></th> 
  
    
      <th class ="dataheader"><%=sortable("param_name","translation_editor_param", sortable_cols.include?("param_name"))%></th> 
  
    
      <th class ="dataheader"><%=sortable("param_order","translation_editor_param", sortable_cols.include?("param_order"))%></th> 
  
    
      <th class ="dataheader"><%=sortable("param_default","translation_editor_param", sortable_cols.include?("param_default"))%></th> 
  
        <%= link_header 2 %>
      
    </tr>
  
    
  <% cell_class = "data" %>
  <% link_cell_class="link"%>  
  <% @translation_editor_params.each do |translation_editor_param| %>
  
    <tr class = "<%= cycle('dataeven', 'dataodd') %>" >
            <td class="<%= cell_class %>"><%= translation_editor_param.dot_key_code %></td>
  
            <td class="<%= cell_class %>"><%= translation_editor_param.param_name %></td>
  
            <td class="<%= cell_class %>"><%= translation_editor_param.param_sequence %></td>
  
            <td class="<%= cell_class %>"><%= translation_editor_param.param_default %></td>
  
          <%= link_edit( edit_translation_editor_param_path(translation_editor_param), :translation_editor_params  ) %>
      <%= link_destroy( translation_editor_param, :translation_editor_params ) %>
      
    </tr>
  <% end #do data %>
  </table>
  <%= twill_paginate %>

<br />
<%end # if else count %>
<%=link_new( new_translation_editor_param_path, :translation_editor_param)  %>
