<script type="text/javascript">
//This script  handles showing and hiding selection criteria
  var criteriaDiv ="#criteria";
  var criteriaButton = "#showHideCriteria";
  $().ready(function(){
    //Initialise the criteria to be hidden on first display
    $(criteriaDiv).hide(); 
    $(criteriaButton).html(criteriaHiddenText);
    
    if( <%%= @<%= plural_table_name %>.count==0 %>){
      toggleCriteria();
    }
    
    $(criteriaButton).click(function(){
      toggleCriteria();
    }); //end click
  });//end ready
  var   criteriaHiddenText = "<%%=t($FA +'show_something', :something=>t($SC))%>";
  var   criteriaVisibleText = "<%%=t($FA +'hide_something', :something=>t($SC))%>";
  function toggleCriteria(){
    if($(criteriaDiv).is(':visible')){ 
        $(criteriaButton).html(criteriaHiddenText);
    }else{
        $(criteriaButton).html(criteriaVisibleText);
    }
    // toggle has to be after setting button text otherwise is(':visible') will not work properly
    $(criteriaDiv).slideToggle('slow');  
  }
  
</script>
<%%=theading("listing", :model=>'<%=singular_table_name%>', :count=>11) %>
<%%if <%= class_name %>.respond_to?( :searchable_attr ) and <%= class_name %>.searchable_attr.any? then %>
<div id = 'data-empty' style = 'display:none'><%%= @<%= plural_table_name %>.empty?.to_s %></div>
<button id="showHideCriteria" type='button'>x</button>
<div id='criteria' class="criteria" >
  <!-- Use form_tag here because we are not going to work with a new AR model. form_tag doesn't work with formtastic either -->
  <!-- See controller#index doc for how to use this stuff below. 
    YOU NEED TO ADD METHODS TO MODEL BEFORE THIS PAGE WILL WORK -->
  <%%= form_tag <%=plural_table_name%>_path, :method => 'get', :class=>'formtastic' do %>
    <!--    These next 2 hidden fields needed for sorting from column headers -->
    <%%= hidden_field_tag :direction, params[:direction] %>
    <%%= hidden_field_tag :sort, params[:sort] %>
    <fieldset class="inputs">
      <ol>
    <% for attribute in attributes -%> 
      <%%if <%=class_name%>.searchable_attr.include?("<%=attribute.name%>") %>  
      <li class="string optional" id="<%=singular_table_name%>_<%= attribute.name%>_input"><label for="criterion<%= attribute.name%>" class="criteria-label" >
        <%%= tlabel("<%= attribute.name%>", "<%=singular_table_name%>") %> </label>
           <%%=select_tag(  :operator_<%= attribute.name%>, options_for_select(operators_2_options(equal_operator), params[:operator_<%= attribute.name%>]),{:include_blank=> true,:class=>'criteria-operators-select', :readonly=>true} ) %> 
           <!-- The date pikcer here cannot reset itself: once a user chooses a date then the only way of having it not considered it to set it to, say 2000-01-01 and criterion to after
             Not pretty but whoever makes datepicker doesn't want a reset function as part of it http://jsbin.com/ofare/edit#javascript,html may be a work around -->
           <%%=text_field_tag( :criterion_<%= attribute.name%>, params[:criterion_<%= attribute.name %>])%>
      </li> 
      <%%end #if  attribute in searchable %> 
    <%end -%> 
     </ol> 
   </fieldset>
      
      <%%= submit_tag "Search", :name => nil %>
  <%%end  #end form_tag do%>

</div>
<%%end # if searchable_attr %>

<%% if @<%= plural_table_name %>.count == 0 then %>
  
<%%  else %>
    <%%= twill_paginate %>

    <%% if <%= class_name %>.respond_to? :sortable_attr
      sortable_cols = <%= class_name %>.sortable_attr
    else
      sortable_cols = []
    end %>

  <table class="data">
    <tr class="dataheader">
  <% for attribute in attributes -%>
  
      <th class ="dataheader"><%%=sortable("<%= attribute.name%>","<%= singular_table_name%>", sortable_cols.include?("<%=attribute.name%>"))%></th> 
  
  <% end -%>
      <%%= link_header 2 %>
      
    </tr>
  
    
  <%% cell_class = "data" %>
  <%% link_cell_class="link"%>  
  <%% @<%= plural_table_name %>.each do |<%= singular_table_name %>| %>
  
    <tr class = "<%%= cycle('dataeven', 'dataodd') %>" >
    <% for attribute in attributes -%>
        <td class="<%%= cell_class %>"><%%= <%= singular_table_name%>.<%=attribute.name %> %></td>
  
    <% end -%>
      <%%= link_edit( edit_<%=singular_table_name%>_path(<%=singular_table_name %>), :<%=plural_table_name%>  ) %>
      <%%= link_destroy( <%=singular_table_name %>, :<%=plural_table_name%> ) %>
      
    </tr>
  <%% end #do data %>
  </table>
  <%%= twill_paginate %>

<br />
<%%end # if else count %>
<%%=link_new( new_<%=singular_table_name%>_path, :<%=singular_table_name %>)  %>
